% ensemble FP filter for the triad system in different statistical regimes
clear
set(0,'defaultAxesFontName', 'Arial')
set(0,'defaultAxesFontSize', 20)

% Monte Carlo - integration parameters
MC=1*10^4;
Dt=1e-3;
tstep=10;
T=10;
Nt=round(T/Dt);

% struct for useful model parameters
params = struct('MC',MC,'Dt',Dt,'T',T,'Nt',Nt,'tstep',tstep);

% statistical regime
params.L=[0,1,-2;-1,0,-3;2,3,0];
params.G=diag([0.02,0.01,0.01]);
params.B(1)=1; params.B(2)=-0.6; params.B(3)=-0.4;
params.req=2.5;
params.SS=params.req*sqrt(2*params.G);
params.SSt=zeros(3,3);
for j=1:params.Nt
    params.tmS(j)=0;
    params.tmM(j,:)=0*[1;1;1];
end

% Initial conditions
params.m0 = [2,1.6,-2];
params.var0 = [.5,.5,1];

%% run direct Monte-Carlo simulation 
% direct MC
params.MC=1*10^5;
[u,TT_MC, samps,Ts_MC, mean_MC, cov_MC, M3_MC_norm, M3_MC, Ene_MC, Ene_dyn] = MC_triad_direct(params, params.m0, params.var0);

% draw results
% stats 
figure;
subplot(2,2,1);
 plot(TT_MC,mean_MC(1,:),'LineWidth',1); hold on;
 plot(TT_MC,mean_MC(2,:),'LineWidth',1);
 plot(TT_MC,mean_MC(3,:),'LineWidth',1);
 legend('<u_1>','<u_2>','<u_3>');
 xlabel('time'); ylabel('mean')
subplot(2,2,2);
 plot(TT_MC,reshape(cov_MC(1,1,:),1,length(TT_MC)), 'LineWidth',1); hold on;
 plot(TT_MC,reshape(cov_MC(2,2,:),1,length(TT_MC)), 'LineWidth',1);
 plot(TT_MC,reshape(cov_MC(3,3,:),1,length(TT_MC)), 'LineWidth',1);
 legend('var u_1','var u_2','var u_3'); %,'total var');
 xlabel('time'); ylabel('variance')
subplot(2,2,3);
 plot(TT_MC,reshape(cov_MC(1,2,:),1,length(TT_MC)), 'LineWidth',1); hold on;
 plot(TT_MC,reshape(cov_MC(1,3,:),1,length(TT_MC)), 'LineWidth',1);
 plot(TT_MC,reshape(cov_MC(2,3,:),1,length(TT_MC)), 'LineWidth',1);
 legend('cov(u_1,u_2)','cov(u_1,u_3)','cov(u_2,u_3)');
 xlabel('time'); ylabel('cross-covariance')
subplot(2,2,4);
 plot(TT_MC,reshape(M3_MC(1,2,3,:),1,length(TT_MC)),'LineWidth',2); hold on;
 plot(TT_MC,reshape(M3_MC(1,2,2,:),1,length(TT_MC)),'LineWidth',1);
 plot(TT_MC,reshape(M3_MC(1,3,3,:),1,length(TT_MC)),'LineWidth',1);
 plot(TT_MC,reshape(M3_MC(2,2,3,:),1,length(TT_MC)),'LineWidth',1);
 legend('<M_1_2_3>','<M_1_2_2>','<M_1_3_3>','<M_2_2_3>');
 xlabel('time'); ylabel('3rd order central moments')

 figure
 subplot(1,3,1)
 scatter(u(:,1),u(:,2),'.'); xlabel('u_1'); ylabel('u_2');
 title('scatter plots for the joint distribution')
 subplot(1,3,2)
 scatter(u(:,2),u(:,3),'.'); xlabel('u_2'); ylabel('u_3');
 subplot(1,3,3)
 scatter(u(:,3),u(:,1),'.'); xlabel('u_3'); ylabel('u_1');

 % PDFs
 figure
 for ii=1:3
     subplot(1,3,ii)
     pdf_u = histogram(u(:,ii),200,'Normalization','pdf'); 
     xx= pdf_u.BinEdges(2:end);
     plot(xx,pdf_u.Values,'LineWidth',2); set(gca,'yscale','log'); hold on
     xlabel(['u_',num2str(ii)]); ylabel(['p(u_',num2str(ii),')']);
    
     % gaussian fit
     sm = mean(u(:,ii));
     sv = var(u(:,ii));
     pdf_norm = normpdf(xx,sm,sqrt(sv));
     plot(xx,pdf_norm,'k--','LineWidth',1);
 end

 % linear instability
 Bsis=eye(3);
 for j1=1:length(TT_MC)
    U=mean_MC(:,j1);
    for i=1:3
        for ii=1:3
            Lvs(i,ii)=(Buu2(params.B,U,Bsis(:,ii))+Buu2(params.B,Bsis(:,ii),U)+(params.L-params.G)*Bsis(:,ii))'*Bsis(:,i);
        end
    end
    EIGLR(:,j1)=sort(real(eig(Lvs)));
    EIGLI(:,j1)=sort(imag(eig(Lvs)));

 end
 
figure; 
subplot(1,2,1);
 plot(TT_MC,(EIGLR),'k'); 
 xlabel('time'); title('Real part of eigenvalues of L_v(<u>)')
subplot(1,2,2);
 plot(TT_MC,(EIGLI),'k'); 
 xlabel('time'); title('Imaginary part of eigenvalues of L_v(<u>)')



%% filtering models
params.MC=100;   % small ensemble size
params.eps=.1;   % relaxation parameter

% observation noises
params.sig_m=diag([.0125,.0154,.0154]);
params.sig_v=[0.0627,0.0839,0.0857;
              0.0839,0.1103,0.1099;
              0.0857,0.1099,0.1102];

params.skip=1;
obs_mean = mean_MC(:,1:end);
obs_cov = cov_MC(:,:,1:end);
m0=params.m0;
var0=params.var0;
rng(150);

% high-order filter
[zt_fil,TT_fil,z_fil,Ts_fil, fil_mean,fil_cov, fil_mom] = triad_filtering_model(params, m0,var0, obs_mean,obs_cov);
% EnKF
[zt_fil1,TT_fil1,z_fil1,Ts_fil1, fil_mean1,fil_cov1, fil1_mom] = triad_filtering_determ(params, m0,var0, obs_mean,obs_cov);
% no filter
[zt_pert,TT_pert,z_pert,Ts_pert, pert_mean,pert_cov, pert_mom] = triad_stocstat_pert(params, m0, var0);


% filter result
figure;
subplot(3,1,1);
 plot(TT,mean_u(1,:),'k','LineWidth',2); hold on; 
 plot(TT_fil,fil_mean(1,:),'--','LineWidth',1.5); plot(TT_pert,pert_mean(1,:),'-.','LineWidth',1);
 ylabel('mean(u_1)'); %xlabel('time'); 
title('prediction of mean state')
subplot(3,1,2);
 plot(TT,mean_u(2,:),'k','LineWidth',2); hold on; 
 plot(TT_fil,fil_mean(2,:),'--','LineWidth',1.5); plot(TT_pert,pert_mean(2,:),'-.','LineWidth',1);
 ylabel('mean(u_2)'); %xlabel('time'); 
subplot(3,1,3);
 plot(TT,mean_u(3,:),'k','LineWidth',2); hold on; 
 plot(TT_fil,fil_mean(3,:),'--','LineWidth',1.5); plot(TT_pert,pert_mean(3,:),'-.','LineWidth',1);
 ylabel('mean(u_3)'); xlabel('time');
figure
subplot(3,1,1);
 plot(TT,reshape(cov_u(1,1,:),1,length(TT)),'k','LineWidth',2); hold on; 
 plot(TT_fil,reshape(fil_cov(1,1,:),1,length(TT_fil)), '--','LineWidth',1.5); 
 plot(TT_pert,reshape(pert_cov(1,1,:),1,length(TT_pert)), '-.','LineWidth',1); 
 ylabel('var(u_1)'); %xlabel('time'); 
title('prediction of variance')
subplot(3,1,2);
 plot(TT,reshape(cov_u(2,2,:),1,length(TT)),'k','LineWidth',2); hold on; 
 plot(TT_fil,reshape(fil_cov(2,2,:),1,length(TT_fil)), '--','LineWidth',1.5); 
 plot(TT_pert,reshape(pert_cov(2,2,:),1,length(TT_pert)), '-.','LineWidth',1);
 ylabel('var(u_2)'); %xlabel('time'); 
subplot(3,1,3);
 plot(TT,reshape(cov_u(3,3,:),1,length(TT)),'k','LineWidth',2); hold on; 
 plot(TT_fil,reshape(fil_cov(3,3,:),1,length(TT_fil)), '--','LineWidth',1.5); 
 plot(TT_pert,reshape(pert_cov(3,3,:),1,length(TT_pert)), '-.','LineWidth',1);
 ylabel('var(u_3)'); xlabel('time'); 
figure
subplot(3,1,1);
 plot(TT,reshape(cov_u(1,2,:),1,length(TT)),'k','LineWidth',2); hold on; 
 plot(TT_fil,reshape(fil_cov(1,2,:),1,length(TT_fil)), '--','LineWidth',1.5); 
 plot(TT_pert,reshape(pert_cov(1,2,:),1,length(TT_pert)), '-.','LineWidth',1);
 ylabel('cov(u_1,u_2)'); %xlabel('time'); 
title('prediction of covariance')
subplot(3,1,2);
 plot(TT,reshape(cov_u(1,3,:),1,length(TT)),'k','LineWidth',2); hold on; 
 plot(TT_fil,reshape(fil_cov(1,3,:),1,length(TT_fil)), '--','LineWidth',1.5); 
 plot(TT_pert,reshape(pert_cov(1,3,:),1,length(TT_pert)), '-.','LineWidth',1);
 ylabel('cov(u_1,u_3)'); %xlabel('time'); 
subplot(3,1,3);
 plot(TT,reshape(cov_u(2,3,:),1,length(TT)),'k','LineWidth',2); hold on; 
 plot(TT_fil,reshape(fil_cov(2,3,:),1,length(TT_fil)), '--','LineWidth',1.5); 
 plot(TT_pert,reshape(pert_cov(2,3,:),1,length(TT_pert)), '-.','LineWidth',1);
 ylabel('cov(u_2,u_3)'); xlabel('time'); 

 % error calculate
 nt_list=[8,10,12,14,16];
 nz_list=[4001,5001,6001,7001,8001];
 for ll=1:5
     nt=nt_list(ll); nz=nz_list(ll);
     for ii=1:3
        zz_t = z_samps(:,ii,nt);
        [count,xx]=hist(zz_t,50);
        zz_pdf_t=count/sum(count);
    
        zz_m=permute(z_fil(:,:,nz-500:nz+500),[2 1 3]);
        count=hist(zz_m(ii,:),xx);
        zz_pdf_m=count/sum(count);
    
        info = zz_pdf_t .* log2( zz_pdf_t./zz_pdf_m );
        ind=(info==Inf);
        kld(ii,ll) = sum(info(ind==0),'omitnan');
    
     end
 end

 err_m = sqrt(mean((mean_u(:,1:.8*end)-fil_mean(:,1:.8*end)).^2,2))
 err_v = sqrt(mean((cov_u(:,:,1:.8*end)-fil_cov(:,:,1:.8*end)).^2,3))
 sum(kld,1)

 [sum(mean(kld,2)), sum(err_m), trace(err_v)]